-- This script was generated by the Schema Diff utility in pgAdmin 4. 
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated 
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps. 
 BEGIN; 
 CREATE SEQUENCE IF NOT EXISTS public.widget_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.widget_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.default_dashboard_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.default_dashboard_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.dashboard_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.dashboard_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.dashboard_widget_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.dashboard_widget_seq
    OWNER TO postgres;



CREATE SEQUENCE IF NOT EXISTS public.default_dashboard_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.default_dashboard_id_seq1
    OWNER TO postgres;

CREATE TABLE IF NOT EXISTS public.default_dashboard
(
    id bigint NOT NULL DEFAULT nextval('default_dashboard_id_seq1'::regclass),
    member_id uuid NOT NULL,
    dashboard_id uuid NOT NULL,
    dao_id uuid NOT NULL,
    CONSTRAINT default_dashboard_pkey PRIMARY KEY (member_id, dao_id),
    CONSTRAINT default_dashboard_id_key UNIQUE (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.default_dashboard
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.dashboard
(
    id bigint NOT NULL DEFAULT nextval('dashboard_seq'::regclass),
    dashboard_id uuid DEFAULT uuid_generate_v4(),
    dao_id uuid,
    dashboard_name text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    description text COLLATE pg_catalog."default",
    "default" boolean,
    visibility visibilitytype,
    CONSTRAINT dashboard_pkey1 PRIMARY KEY (id),
    CONSTRAINT dashboard_dashboard_id_key UNIQUE (dashboard_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.dashboard
    OWNER to postgres;
    
CREATE TABLE IF NOT EXISTS public.dashboard_widget
(
    dashboard_widget_id bigint NOT NULL DEFAULT nextval('dashboard_widget_seq'::regclass),
    dashboard_id uuid,
    active boolean,
    row_id integer,
    col_id integer,
    "order" integer,
    draggable boolean,
    popup_id integer,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    id integer NOT NULL,
    name text COLLATE pg_catalog."default",
    CONSTRAINT dashboard_pkey PRIMARY KEY (dashboard_widget_id),
    CONSTRAINT dashboard_id_fk FOREIGN KEY (dashboard_id)
        REFERENCES public.dashboard (dashboard_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
)

TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.dashboard_widget
    OWNER to postgres;


-- Type: visibilitytype

-- DROP TYPE IF EXISTS public.visibilitytype;

-- CREATE TYPE public.visibilitytype AS ENUM
--    ('public', 'private');

ALTER TYPE public.visibilitytype
    OWNER TO postgres;
CREATE OR REPLACE VIEW public.dashboard_view
 AS
 SELECT d.dashboard_id,
    d.dao_id,
    d.dashboard_name,
    d.description,
    d.visibility,
    to_json(ARRAY( SELECT json_build_object('dashboard_widget_id', dw.dashboard_widget_id, 'active', dw.active, 'id', dw.id, 'name', dw.name, 'row_id', dw.row_id, 'col_id', dw.col_id, 'draggable', dw.draggable, 'order', dw."order", 'popup_id', dw.popup_id) AS widget
           FROM dashboard_widget dw
          WHERE dw.dashboard_id = d.dashboard_id)) AS widgets,
    d."default",
    d.created_at,
    d.updated_at
   FROM dashboard d;

ALTER TABLE public.dashboard_view
    OWNER TO postgres;



 END;