-- This script was generated by the Schema Diff utility in pgAdmin 4. 
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated 
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps. 
 BEGIN; 
 CREATE SEQUENCE IF NOT EXISTS public.events_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.events_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.member_events_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.member_events_seq
    OWNER TO postgres;
CREATE TABLE IF NOT EXISTS public.dao_events
(
    id bigint NOT NULL DEFAULT nextval('events_seq'::regclass),
    dao_id uuid,
    created_at timestamp without time zone DEFAULT now(),
    event_context text COLLATE pg_catalog."default",
    event_type text COLLATE pg_catalog."default",
    CONSTRAINT events_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.dao_events
    OWNER to postgres;
CREATE TABLE IF NOT EXISTS public.member_events
(
    id bigint NOT NULL DEFAULT nextval('member_events_seq'::regclass),
    member_id uuid,
    created_at timestamp without time zone DEFAULT now(),
    event_context text COLLATE pg_catalog."default",
    event_type text COLLATE pg_catalog."default",
    CONSTRAINT member_events_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.member_events
    OWNER to postgres;
-- Type: membereventcontext

-- DROP TYPE IF EXISTS public.membereventcontext;

CREATE TYPE public.membereventcontext AS ENUM
    ('task', 'verifyable_creds');

ALTER TYPE public.membereventcontext
    OWNER TO postgres;
-- Type: eventtype

-- DROP TYPE IF EXISTS public.eventtype;

CREATE TYPE public.eventtype AS ENUM
    ('project_created', 'project_completed', 'project_deleted');

ALTER TYPE public.eventtype
    OWNER TO postgres;
-- Type: membereventtype

-- DROP TYPE IF EXISTS public.membereventtype;

CREATE TYPE public.membereventtype AS ENUM
    ('task_created', 'task_assigned', 'task_unassigned', 'task_completed', 'task_deleted', 'verifyable_creds_created', 'verifyable_creds_updated');

ALTER TYPE public.membereventtype
    OWNER TO postgres;
-- Type: eventcontext

-- DROP TYPE IF EXISTS public.eventcontext;

CREATE TYPE public.eventcontext AS ENUM
    ('project', 'bounty', 'opportunity');

ALTER TYPE public.eventcontext
    OWNER TO postgres;

 END;